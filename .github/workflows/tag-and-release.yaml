name: Publish UDS Capability

on:
  push:
    branches:
      - "main"
    tags:
      - "dev"
      - "v*.*.*"

concurrency:
  group: tag-and-release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tag-new-version:
    runs-on: ubuntu-latest
    name: Release Tagging

    permissions: write-all

    outputs:
      release_created: ${{ steps.release-flag.outputs.release_created }}

    steps:
      - name: Create Release Tag
        id: tag
        uses: google-github-actions/release-please-action@cc61a07e2da466bebbc19b3a7dd01d6aecb20d1e # v4.0.0
        with:
          command: manifest # use configs in release-please-config.json

      - name: Create Publish Flag
        id: release-flag
        run: |
          CURRENT_REF="${{ github.ref }}"
          echo "Current branch or tag reference: $CURRENT_REF"

          if [[ "$CURRENT_REF" == "refs/tags/dev" ]] || [[ "${{ steps.tag.outputs.release_created }}" == 'true' ]]; then
            echo "release_created=true" >> $GITHUB_OUTPUT
          else
            echo "release_created=false" >> $GITHUB_OUTPUT
          fi
        shell: bash

  publish-uds-package:
    needs: tag-new-version
    if: ${{ needs.tag-new-version.outputs.release_created == 'true'}}
    runs-on: ubuntu-latest
    name: Publish Package

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Setup UDS
        if: always()
        uses: ./.github/actions/setup
        with:
          registry1Username: ${{secrets.IRON_BANK_ROBOT_USERNAME}}
          registry1Password: ${{secrets.IRON_BANK_ROBOT_PASSWORD}}
          ghToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish UDS RKE2
        run: |
          echo "Publishing for tag: ${{ github.ref }}"

          if [[ "${{ github.ref }}" == "refs/tags/dev" ]]; then
           sudo uds run release-dev --set VERSION=dev --no-progress --no-log-file --log-level debug
          else
            sudo uds run release --no-progress --no-log-file --log-level debug
          fi
        shell: bash
