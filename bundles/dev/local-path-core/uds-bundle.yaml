# TODO: renovate setup
# yaml-language-server: $schema=https://raw.githubusercontent.com/defenseunicorns/uds-cli/v0.10.4/uds.schema.json

kind: UDSBundle
metadata:
  name: uds-rke2-local-path-core
  description: "A UDS bundle for bootstrapping an RKE2 cluster and installing UDS Core services"
  version: "dev"
  architecture: amd64

packages:
  - name: uds-rke2
    description: "Deploys the UDS RKE2 Zarf package"
    repository: ghcr.io/justinthelaw/packages/uds/uds-rke2
    ref: "dev"

  - name: local-path-init
    description: "Deploys the custom Zarf Init package"
    repository: ghcr.io/justinthelaw/packages/uds/uds-rke2/init
    # TODO: renovate setup
    ref: "v0.33.0-local-path"

  - name: uds-rke2-infrastructure
    description: "Deploys the UDS RKE2 base infrastructure Zarf package"
    repository: ghcr.io/justinthelaw/packages/uds/uds-rke2/infrastructure
    ref: "dev"

  - name: uds-core
    description: "Deploys UDS Core services"
    repository: ghcr.io/defenseunicorns/packages/uds/core
    # TODO: renovate setup
    ref: "0.22.2-registry1"
    overrides:
      loki:
        loki:
          values:
            # Override default DNS service name for Loki Gateway
            - path: "global.dnsService"
              value: "rke2-coredns-rke2-coredns"
            # If S3 API is external to the cluster
            - path: loki.storage.s3.endpoint
              value: ""
            - path: loki.storage.s3.secretAccessKey
              value: ""
            - path: loki.storage.s3.accessKeyId
              value: ""
          variables:
            - name: LOKI_CHUNKS_BUCKET
              description: "The object storage bucket for Loki chunks"
              path: loki.storage.bucketNames.chunks
              default: "uds"
            - name: LOKI_RULER_BUCKET
              description: "The object storage bucket for Loki ruler"
              path: loki.storage.bucketNames.ruler
              default: "uds"
            - name: LOKI_ADMIN_BUCKET
              description: "The object storage bucket for Loki admin"
              path: loki.storage.bucketNames.admin
              default: "uds"
            - name: LOKI_S3_REGION
              description: "The S3 region"
              path: loki.storage.s3.region
              default: "us-east-1"
            - name: LOKI_IRSA_ROLE_ARN
              description: "The irsa role annotation"
              path: serviceAccount.annotations.irsa/role-arn
            - name: LOKI_WRITE_REPLICAS
              path: write.replicas
              description: "Loki write replicas"
              default: "1"
            - name: LOKI_READ_REPLICAS
              path: read.replicas
              description: "Loki read replicas"
              default: "1"
            - name: LOKI_BACKEND_REPLICAS
              path: backend.replicas
              description: "Loki backend replicas"
              default: "1"

      velero:
        velero:
          variables:
            - name: VELERO_USE_SECRET
              description: "Toggle use secret off to use IRSA."
              path: credentials.useSecret
              default: "false"
            - name: VELERO_IRSA_ROLE_ARN
              description: "IRSA role arn for annotation"
              path: serviceAccount.server.annotations.irsa/role-arn
              default: ""

      istio-admin-gateway:
        uds-istio-config:
          # Access to UDS cluster administration services (e.g., *admin.uds.dev, grafana.admin.uds.dev)
          variables:
            - name: ADMIN_TLS_CERT
              description: "The TLS cert for the admin gateway (must be base64 encoded)"
              path: ../tls.cert
            - name: ADMIN_TLS_KEY
              description: "The TLS key for the admin gateway (must be base64 encoded)"
              path: ../tls.key

      istio-tenant-gateway:
        # Access to UDS application services (e.g., *.uds.dev, ai.uds.dev)
        uds-istio-config:
          variables:
            - name: TENANT_TLS_CERT
              description: "The TLS cert for the tenant gateway (must be base64 encoded)"
              path: ../tls.cert
            - name: TENANT_TLS_KEY
              description: "The TLS key for the tenant gateway (must be base64 encoded)"
              path: ../tls.key

  - name: uds-rke2-exemptions
    description: "Deploys the UDS Core Pepr policy exemptions"
    repository: ghcr.io/justinthelaw/packages/uds/uds-rke2/exemptions
    ref: "dev-local-path"
    optionalComponents:
      - nvidia-gpu-operator-exemptions
