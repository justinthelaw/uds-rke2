options:
  architecture: amd64

shared:
  domain: uds.local

variables:
  uds-rke2:
    join_token: $JOIN_TOKEN

  infrastructure:
    network_interface: $NETWORK_INTERFACE

  local-path-init:
    # Workaround for SELinux EBS issue - https://github.com/bottlerocket-os/bottlerocket/issues/2417
    registry_hpa_enable: false
    registry_pvc_enabled: true
    registry_pvc_size: 100Gi
    # Set this to ReadWriteMany for multi-node, HA situations
    # See documentation on the StorageClass Zarf Init flavors for more details
    registry_pvc_access_mode: ReadWriteOnce
    storage_configuration_values_file: values/storage-configuration-values.yaml

    # MinIO bucket persistence volume size
    bucket_persistence_size: $BUCKET_PERSISTENCE_SIZE

  core:
    loki_s3_endpoint: http://minio.minio.svc.cluster.local:9000
    loki_chunks_bucket: uds
    loki_ruler_bucket: uds
    loki_admin_bucket: uds
    loki_s3_region: us-east-1
    loki_s3_access_key_id: uds
    loki_s3_secret_access_key: uds-secret
    loki_irsa_role_arn: ""
    loki_write_replicas: 1
    loki_read_replicas: 1
    loki_backend_replicas: 1

    velero_use_secret: false
    velero_irsa_role_arn: ""

    # Zarf variables not available via UDS bundle values path overrides
    velero_bucket: uds
    velero_bucket_region: us-east-1
    velero_bucket_provider_url: http://minio.minio.svc.cluster.local:9000
    velero_bucket_credential_name: uds
    velero_bucket_credential_key: uds-secret

    # TLS CERT and KEY values must be base64 encoded
    # Paste the entire TLS CERT or KEY value into the fields below
    admin_tls_cert: BASE_64_ENCODED_TLS_CERT
    admin_tls_key: BASE_64_ENCODED_TLS_KEY
    tenant_tls_cert: BASE_64_ENCODED_TLS_CERT
    tenant_tls_key: BASE_64_ENCODED_TLS_KEY
