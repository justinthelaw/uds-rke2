# TODO: renovate setup
# yaml-language-server: $schema=https://raw.githubusercontent.com/defenseunicorns/uds-cli/v0.10.4/zarf.schema.json

kind: ZarfInitConfig
metadata:
  name: init
  description: "Custom Zarf Init Package for UDS RKE2"
  architecture: amd64

variables:
  - name: BUCKET_PERSISTENCE_SIZE
    description: "Size of the default PVC for MinIO (e.g., 30Gi)"
    default: "30Gi"
    prompt: false

components:
  #######
  # ZARF
  #######

  - name: zarf-injector
    required: true
    description: "Install the Zarf injector and registry binaries"
    import:
      # TODO: renovate setup
      url: oci://ghcr.io/defenseunicorns/packages/init:v0.33.0

  # Creates the temporary seed-registry
  - name: zarf-seed-registry
    required: true
    description: "Creates a bootstrapping seed registry and prepares a volume for mounting to the permanent registry"
    import:
      # TODO: renovate setup
      url: oci://ghcr.io/defenseunicorns/packages/init:v0.33.0
    charts:
      - name: docker-registry
        namespace: zarf
        valuesFiles:
          - values/registry-values.yaml
    actions:
      onDeploy:
        before:
          - cmd: uds zarf tools kubectl get pvc zarf-docker-registry -n zarf >/dev/null 2>&1 && echo true || echo false
            description: Set persistence for upgrading the seed registry
            mute: true
            setVariables:
              - name: UPGRADE_PERSISTENCE
          - mute: true
            description: Set ENV variables for upgrading the seed registry
            cmd: |
              uds zarf tools kubectl get pvc zarf-docker-registry -n zarf >/dev/null 2>&1 && \
              echo "" || \
              echo "- name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
                value: \"/var/lib/registry\""
            setVariables:
              - name: UPGRADE_ENV_VARS
                autoIndent: true

  ###########
  # LONGHORN
  ###########

  - name: longhorn-images-initial
    required: true
    only:
      flavor: longhorn
    description: "Push the Longhorn images into the seed registry"
    import:
      path: ../longhorn
      name: longhorn-images

  ########################
  # LOCAL PATH PROVISIONER
  ########################

  - name: local-path-provisioner-images-initial
    required: true
    only:
      flavor: local-path
    description: "Push the Local Path Provisioner images into the seed registry"
    import:
      path: ../local-path
      name: local-path-provisioner-images

  - name: local-path-provisioner
    required: true
    only:
      flavor: local-path
    import:
      path: ../local-path
      name: local-path-provisioner

  ########
  # MINIO
  ########

  - name: minio-images-initial
    required: true
    only:
      flavor: local-path
    description: "Push the MinIO images into the seed registry"
    import:
      path: ../minio
      name: minio-images

  - name: minio-images-initial
    required: true
    only:
      flavor: longhorn
    description: "Push the MinIO images into the seed registry"
    import:
      path: ../minio
      name: minio-images

  - name: minio
    required: true
    only:
      flavor: local-path
    import:
      path: ../minio
      name: minio

  - name: minio
    required: true
    only:
      flavor: longhorn
    import:
      path: ../minio
      name: minio

  ###########
  # ROOK-CEPH
  ###########

  - name: rook-ceph-images-initial
    required: true
    only:
      flavor: rook-ceph
    description: "Push the Rook-Ceph images into the seed registry"
    import:
      path: ../rook-ceph
      name: rook-ceph-images

  - name: rook-ceph-operator
    required: true
    only:
      flavor: rook-ceph
    import:
      path: ../rook-ceph
      name: rook-ceph-operator

  - name: rook-ceph-cluster
    required: true
    only:
      flavor: rook-ceph
    import:
      path: ../rook-ceph
      name: rook-ceph-cluster

  #######
  # ZARF
  #######

  - name: zarf-registry
    required: true
    description: "Create the permanent registry"
    import:
      # TODO: renovate setup
      url: oci://ghcr.io/defenseunicorns/packages/init:v0.33.0

  ########################
  # LOCAL PATH PROVISIONER
  ########################

  - name: local-path-provisioner-images
    required: true
    only:
      flavor: local-path
    description: "Push the Local Path Provisioner images into the permanent registry"
    import:
      path: ../local-path
    images:
      - "###ZARF_PKG_TMPL_REGISTRY_IMAGE_DOMAIN######ZARF_PKG_TMPL_REGISTRY_IMAGE###:###ZARF_PKG_TMPL_REGISTRY_IMAGE_TAG###"

  ###########
  # LONGHORN
  ###########

  - name: longhorn-images
    required: true
    only:
      flavor: longhorn
    description: "Push the Longhorn images into the permanent registry"
    import:
      path: ../longhorn
    images:
      - "###ZARF_PKG_TMPL_REGISTRY_IMAGE_DOMAIN######ZARF_PKG_TMPL_REGISTRY_IMAGE###:###ZARF_PKG_TMPL_REGISTRY_IMAGE_TAG###"

  ########
  # MINIO
  ########

  - name: minio-images
    required: true
    only:
      flavor: local-path
    description: "Push the MinIO images into the permanent registry"
    import:
      path: ../minio
    images:
      - "###ZARF_PKG_TMPL_REGISTRY_IMAGE_DOMAIN######ZARF_PKG_TMPL_REGISTRY_IMAGE###:###ZARF_PKG_TMPL_REGISTRY_IMAGE_TAG###"

  - name: minio-images
    required: true
    only:
      flavor: longhorn
    import:
      path: ../minio
    description: "Push the MinIO images into the permanent registry"
    images:
      - "###ZARF_PKG_TMPL_REGISTRY_IMAGE_DOMAIN######ZARF_PKG_TMPL_REGISTRY_IMAGE###:###ZARF_PKG_TMPL_REGISTRY_IMAGE_TAG###"

  ###########
  # ROOK-CEPH
  ###########

  - name: rook-ceph-images
    required: true
    only:
      flavor: rook-ceph
    description: "Push the Rook-Ceph images into the permanent registry"
    import:
      path: ../rook-ceph
    images:
      - "###ZARF_PKG_TMPL_REGISTRY_IMAGE_DOMAIN######ZARF_PKG_TMPL_REGISTRY_IMAGE###:###ZARF_PKG_TMPL_REGISTRY_IMAGE_TAG###"

  #######
  # ZARF
  #######

  - name: zarf-agent
    required: true
    description: "Deploy the Zarf pod and Git mutating webhook"
    import:
      # TODO: renovate setup
      url: oci://ghcr.io/defenseunicorns/packages/init:v0.33.0
