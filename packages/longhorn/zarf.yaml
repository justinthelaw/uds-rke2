# TODO: renovate setup
# yaml-language-server: $schema=https://raw.githubusercontent.com/defenseunicorns/uds-cli/v0.10.4/zarf.schema.json

#### NOTES ####
#
# This is based on the following resources:
# zarf-init-longhorn - https://github.com/defenseunicorns/zarf-init-longhorn/blob/main/longhorn/zarf.yaml
kind: ZarfPackageConfig
metadata:
  name: longhorn
  description: "UDS RKE2 Longhorn Zarf Package"
  version: "###ZARF_PKG_TMPL_VERSION###"
  architecture: amd64

constants:
  # Must be set at create time, using the `--set CLUSTER_CONFIGURATION` flag, to pull in the right values file
  - name: CLUSTER_CONFIGURATION
    description: "Longhorn file swapping (`multi-node` or `single-node`)"
    value: "###ZARF_PKG_TMPL_CLUSTER_CONFIGURATION###"
    pattern: "^(single-node|multi-node)$"

# variables:
#   # The following disable and enable StorageClasses available through the Rook-Ceph cluster
#   - name: LONGHORN_VAR_1
#     description: "Boolean to enable (true) or disable (false) the Ceph block storage type"
#     default: "true"
#     pattern: "^(true|false)$"
#     prompt: true
#   - name: LONGHORN_VAR_2
#     description: "Boolean variable for Longhorn"
#     default: "true"
#     pattern: "^(true|false)$"
#     prompt: true

components:
  - name: longhorn-environment-check
    required: true
    files:
      - source: https://raw.githubusercontent.com/longhorn/longhorn/v1.4.0/scripts/environment_check.sh
        target: environment_check.sh
        shasum: 4df400fa81e65e51d83db8ff8e4f513ddd32c124619bb36c94319e71ca4d0a4d
        executable: true
      - source: https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
        target: jq
        shasum: af986793a515d500ab2d35f8d2aecd656e764504b789b66d7e1a0b727a124c44
        executable: true
    actions:
      # Run the Longhorn Environment Check on this cluster's nodes.
      onDeploy:
        after:
          - cmd: |
              export PATH=$PATH:./
              awk '{gsub(/kubectl /, "./zarf tools kubectl ")} 1' ./environment_check.sh > tmp && mv tmp ./environment_check.sh
              awk '{gsub(/"kubectl" /, "")} 1' ./environment_check.sh > tmp && mv tmp ./environment_check.sh
              chmod +x ./environment_check.sh
              ./environment_check.sh

  # - name: prepare-host
  #   required: true
  #   description: "Prepare host system with items needed for longhorn"
  #   files:
  #     - source: scripts/longhorn/os-prep.sh
  #       target: /root/uds-rke2-artifacts/longhorn/os-prep.sh
  #       executable: true
  #   actions:
  #     onDeploy:
  #       after:
  #         - cmd: /root/uds-rke2-artifacts/longhorn/os-prep.sh
  #           description: "Prepare host for longhorn things"

  - name: longhorn-images
    required: true
    description: Push longhorn images to the zarf registry
    images:
      - longhornio/longhorn-manager:v1.5.1
      - longhornio/longhorn-ui:v1.5.1
      - longhornio/backing-image-manager:v1.5.1
      - longhornio/csi-attacher:v4.2.0
      - longhornio/csi-node-driver-registrar:v2.7.0
      - longhornio/csi-provisioner:v3.4.1
      - longhornio/csi-resizer:v1.7.0
      - longhornio/csi-snapshotter:v6.2.1
      - longhornio/livenessprobe:v2.9.0
      - longhornio/longhorn-engine:v1.5.1
      - longhornio/longhorn-instance-manager:v1.5.1
      - longhornio/longhorn-share-manager:v1.5.1
      - longhornio/support-bundle-kit:v0.0.25

  - name: longhorn-deployment
    required: true
    description: Deploy Longhorn into a Kubernetes cluster.  https://longhorn.io
    actions:
      # Set the delete confirmation flag for Longhorn
      onRemove:
        before:
          - cmd: './zarf tools kubectl -n longhorn-system patch -p ''{"value": "true"}'' --type=merge lhs deleting-confirmation-flag'
      onDeploy:
        after:
          - cmd: "./zarf tools kubectl wait -n longhorn-system deployment --all --for=condition=Available"
          - cmd: "./zarf tools kubectl rollout status daemonset -n longhorn-system"
    manifests:
      - name: longhorn-connect
        namespace: longhorn-system
        files:
          - connect.yaml
    charts:
      - name: longhorn
        url: https://charts.longhorn.io
        version: 1.5.1
        namespace: longhorn-system
        valuesFiles:
          - values.yaml
