# TODO: renovate setup
# yaml-language-server: $schema=https://raw.githubusercontent.com/defenseunicorns/uds-cli/v0.10.4/zarf.schema.json

kind: ZarfPackageConfig
metadata:
  name: rook-ceph
  description: "UDS RKE2 Rook-Ceph Zarf Package"
  version: "###ZARF_PKG_TMPL_VERSION###"
  architecture: amd64

constants:
  # Must be set at create time, using the `--set CLUSTER_CONFIGURATION` flag, to pull in the right values file
  - name: CLUSTER_CONFIGURATION
    description: "Rook-Ceph values file swapping (`multi-node` or `single-node`)"
    value: "###ZARF_PKG_TMPL_CLUSTER_CONFIGURATION###"
    pattern: "^(single-node|multi-node)$"

variables:
  # The following disable and enable StorageClasses available through the Rook-Ceph cluster
  - name: ENABLE_CEPH_BLOCK_STORE
    description: "Boolean to enable (true) or disable (false) the Ceph block storage type"
    default: "true"
    pattern: "^(true|false)$"
    prompt: true
  - name: ENABLE_CEPH_OBJECT_STORE
    description: "Boolean to enable (true) or disable (false) the Ceph object storage type"
    default: "true"
    pattern: "^(true|false)$"
    prompt: true
  - name: ENABLE_CEPH_FILE_STORE
    description: "Boolean to enable (true) or disable (false) the Ceph file storage type"
    default: "false"
    pattern: "^(true|false)$"
    prompt: true
  - name: CEPH_BLOCK_STORE_AS_DEFAULT
    description: "Sets the block store as default StorageClass in the cluster"
    default: "true"
    pattern: "^(true|false)$"
    prompt: false
  - name: CEPH_OBJECT_STORE_AS_DEFAULT
    description: "Sets the object store as default StorageClass in the cluster"
    default: "false"
    pattern: "^(true|false)$"
    prompt: false
  - name: CEPH_FILE_STORE_AS_DEFAULT
    description: "Sets the file store as default StorageClass in the cluster"
    default: "false"
    pattern: "^(true|false)$"
    prompt: false

  # The following determines where the data is stored on the nodes, AFTER node taints/tolerations are applied
  # DEVICE_NAME, DATABASE_SIZE, and DEVICE_CLASS are only relevant in a `single-node` deployment, whereas
  # DEVICE_FILTER is used for a `multi-node` deployment
  - name: DEVICE_NAME
    description: "The node's device or logical volume k-name to be used for BlueStore formatting and storage"
    # Empty and zap the disk, then run `lsblk --all --list --output KNAME,NAME,SIZE,TYPE,MOUNTPOINT` to find the KNAME
    default: "dm-1"
    prompt: true
  - name: DEVICE_CLASS
    description: "The storage type of the node's device or logical volume"
    # See https://docs.ceph.com/en/latest/rados/operations/crush-map/#device-classes for more details
    default: "nvme"
    prompt: true
  - name: DATABASE_SIZE
    description: "The amount of storage available in the node's device, in MB"
    # 90000 MB = 90 GiB
    default: "90000"
    prompt: true
  - name: DEVICE_FILTER
    description: "A REGEX expression for filtering which devices are to be used for BlueStore formatting and storage"
    # Empty and zap the disk, then run `lsblk --all --list --output KNAME,NAME,SIZE,TYPE,MOUNTPOINT` to find the KNAME
    default: "^(dm-1)$"
    prompt: true
  - name: REGION
    description: "Desired provisioning region."
    default: "us-east-1"
    prompt: true
    sensitive: true

  # The following determines the redundancy (size or count) of the Ceph cluster's monitors, managers and data pools
  # The minimum suggested HA configuration example can be seen below:
  #   --set REPLICAS=3
  #   --set ACTIVE_METADATA_SERVERS=1
  - name: REPLICAS
    description: "Number of redundant resources to deploy, should generally match the number of nodes in the cluster"
    default: "3"
    prompt: false
  - name: ACTIVE_METADATA_SERVERS
    description: "Number of file store metadata servers active at the same time, separate from the number of replicas"
    default: "1"
    prompt: false

  # The following enables or disables monitoring based on Prometheus availability
  # Ceph-specific Prometheus rules can be added: https://github.com/rook/rook/tree/master/deploy/charts/rook-ceph-cluster/prometheus
  - name: ENABLE_MONITORING
    description: "Boolean to enable (true) or disable (false) Prometheus monitoring"
    default: "false"
    pattern: "^(true|false)$"
    prompt: true

components:
  - name: prepare-host
    required: true
    description: "Prepare host system with correct network traffic rules for Ceph controllers"
    files:
      - source: scripts/rook-ceph/os-prep.sh
        target: /root/uds-rke2-artifacts/rook-ceph/os-prep.sh
        executable: true
    actions:
      onDeploy:
        after:
          - cmd: /root/uds-rke2-artifacts/rook-ceph/os-prep.sh
            description: "Prepare traffic rule changes for Ceph controllers"

  - name: rook-ceph-images
    required: true
    description: "Push rook-ceph images to the Zarf seed registry"
    # TODO: renovate setup
    images:
      - registry1.dso.mil/ironbank/opensource/ceph/ceph:v18.2.2
      - registry1.dso.mil/ironbank/rook/ceph:v1.14.0
      - registry1.dso.mil/ironbank/opensource/ceph/ceph-csi:v3.11.0
      - registry1.dso.mil/ironbank/opensource/kubernetes-sigs/sig-storage/csi-node-driver-registrar:v2.10.1
      - registry1.dso.mil/ironbank/opensource/kubernetes-sigs/sig-storage/csi-provisioner:v4.0.1
      - registry1.dso.mil/ironbank/opensource/kubernetes-sigs/sig-storage/csi-snapshotter:v7.0.2
      - registry1.dso.mil/ironbank/opensource/kubernetes-sigs/sig-storage/csi-attacher:v4.5.1
      - registry1.dso.mil/ironbank/opensource/kubernetes-sigs/sig-storage/csi-resizer:v1.10.1

  - name: rook-ceph-operator
    required: true
    description: "Deploy the Rook operator"
    charts:
      # TODO: renovate setup
      - name: rook-ceph
        url: https://charts.rook.io/release
        version: v1.14.0
        namespace: rook-ceph
        valuesFiles:
          - values/operator-values.yaml
    # This action is a workaround to https://github.com/rook/rook/issues/12786
    actions:
      onDeploy:
        after:
          - cmd: |
              ./zarf tools kubectl patch serviceaccount default -n rook-ceph -p '{"imagePullSecrets": [{"name": "private-registry"}]}'
            description: "Add pull secrets for Rook-Ceph cluster"

  - name: rook-ceph-cluster
    required: true
    description: "Deploy the Ceph Cluster and the storage capabilities"
    files:
      # DANGER: will destroy data in the cluster - only copied-in for delivery engineer usage as necessary
      - source: scripts/rook-ceph-destroy.sh
        target: /root/uds-rke2-artifacts/rook-ceph/rook-ceph-destroy.sh
        executable: true
    charts:
      - name: rook-ceph-cluster
        url: https://charts.rook.io/release
        version: v1.14.0
        namespace: rook-ceph
        valuesFiles:
          - values/###ZARF_PKG_TMPL_CLUSTER_CONFIGURATION###-cluster-values.yaml
    actions:
      onDeploy:
        after:
          - wait:
              cluster:
                kind: cephcluster
                name: rook-ceph
                condition: "'{.status.phase}'=Ready"
                namespace: rook-ceph
            maxTotalSeconds: 300
            description: Waiting for CephCluster to be ready
