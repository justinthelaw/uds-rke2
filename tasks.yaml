# TODO: renovate setup
# yaml-language-server: $schema=https://raw.githubusercontent.com/defenseunicorns/uds-cli/v0.10.4/tasks.schema.json

includes:
  - create: ./tasks/create.yaml
  - deploy: ./tasks/deploy.yaml
  - publish: ./tasks/publish.yaml
  - setup: ./tasks/setup.yaml
  - test: ./tasks/test.yaml

variables:
  - name: VERSION
    description: "Explicitly set the version, overriding the official release tag"
    # x-release-please-start-version
    default: "0.4.2"
    # x-release-please-end

  # Explicitly set these environment variables to change the defaults
  - name: JOIN_TOKEN
    description: "Cluster join token for nodes, set by the master"
    default: "my-test-token"
  - name: NETWORK_INTERFACE
    description: "Interface on which to perform L2 advertisement"
    default: "wlp0s20f3"

tasks:
  ####################
  # BUNDLE DEPLOYMENTS
  ####################

  - name: uds-rke2-local-path-core
    description: "Bootstrap a new RKE2 cluster, with the Local Path Provisioner + MinIO Zarf Init and UDS Core packages (LATEST)"
    actions:
      - task: create:logical-volume
      - task: create:tls-cert

      - task: create:local-path-core-bundle
      - task: deploy:local-path-core-bundle

  - name: uds-rke2-local-path-core-dev
    description: "Bootstrap a new RKE2 cluster, with the Local Path Provisioner + MinIO Zarf Init and UDS Core packages (DEV)"
    actions:
      - task: release-dev

      - task: create:logical-volume
      - task: create:tls-cert-dev

      - task: create:local-path-core-bundle-dev
      - task: deploy:local-path-core-bundle-dev

  ##########################
  # ALL PACKAGES AND BUNDLES
  ##########################

  - name: release
    description: "Builds and publishes all Zarf packages and Bundles in the repository (LATEST)"
    actions:
      - task: release-packages
      - task: release-bundles

  - name: release-dev
    description: "Builds and publishes all Zarf packages and Bundles in the repository (DEV)"
    actions:
      - task: release-packages-dev
      - task: release-bundles-dev

  ##############
  # ALL PACKAGES
  ##############

  # TODO: re-enable rook-ceph and longhorn when built
  - name: release-packages
    description: "Builds and publishes all Zarf packages in the repository WITHOUT cleaning artifacts (LATEST)"
    actions:
      # Standard uds-rke2-local-path-core Zarf packages
      - task: create:uds-rke2
      - task: publish:uds-rke2
      - task: create:uds-rke2-infrastructure
      - task: publish:uds-rke2-infrastructure
      - task: create:uds-rke2-exemptions-local-path
      - task: publish:uds-rke2-exemptions-local-path
      - task: create:local-path
      - task: publish:local-path
      - task: create:local-path-init
      - task: publish:local-path-init
      - task: create:minio
      - task: publish:minio

      # Extra, optional Zarf packages
      - task: create:leapfrogai-workarounds
      - task: publish:leapfrogai-workarounds
      - task: create:nvidia-gpu-operator
      - task: publish:nvidia-gpu-operator

  # TODO: re-enable rook-ceph and longhorn when built
  - name: release-packages-with-clean
    description: "Builds and publishes all Zarf packages in the repository (LATEST)"
    actions:
      # Standard uds-rke2-local-path-core Zarf packages
      - task: create:uds-rke2
      - task: publish:uds-rke2
      - task: setup:clean-build-artifacts
      - task: create:uds-rke2-infrastructure
      - task: publish:uds-rke2-infrastructure
      - task: setup:clean-build-artifacts
      - task: create:uds-rke2-exemptions-local-path
      - task: publish:uds-rke2-exemptions-local-path
      - task: setup:clean-build-artifacts
      - task: create:local-path
      - task: publish:local-path
      - task: setup:clean-build-artifacts
      - task: create:local-path-init
      - task: publish:local-path-init
      - task: setup:clean-build-artifacts
      - task: create:minio
      - task: publish:minio
      - task: setup:clean-build-artifacts

      # Extra, optional Zarf packages
      - task: create:leapfrogai-workarounds
      - task: publish:leapfrogai-workarounds
      - task: setup:clean-build-artifacts
      - task: create:nvidia-gpu-operator
      - task: publish:nvidia-gpu-operator
      - task: setup:clean-build-artifacts

  - name: release-packages-dev
    description: "Builds and publishes all Zarf packages in the repository (DEV)"
    actions:
      - description: "Use the `dev` version to run a package release"
        cmd: sudo uds run release-packages --set VERSION=dev --no-progress --no-log-file --log-level warn

  #############
  # ALL BUNDLES
  #############

  - name: release-bundles
    description: "Builds and publishes all UDS bundles in the repository (LATEST)"
    actions:
      - task: create:local-path-core-bundle
      - task: publish:local-path-core-bundle

  - name: release-bundles-dev
    description: "Builds and publishes all UDS bundles in the repository (DEV)"
    actions:
      - task: create:local-path-core-bundle-dev
      - description: "Use the `dev` version to run a bundle release"
        cmd: sudo uds run publish:local-path-core-bundle --set VERSION=dev --no-progress --no-log-file --log-level warn
