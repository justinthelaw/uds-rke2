# TODO: renovate setup
# yaml-language-server: $schema=https://raw.githubusercontent.com/defenseunicorns/uds-cli/v0.10.4/tasks.schema.json

variables:
  - name: VERSION
    description: "Explicitly set the version, overriding the official release tag"
    # x-release-please-start-version
    default: "0.1.0"
    # x-release-please-end

tasks:
  - name: install-deps
    description: "Installs dependencies used in the creation of various packages if not already installed"
    actions:
      - description: "Install required dependencies for package creation if not present on machine"
        cmd: |
          if ! command -v npm &>/dev/null; then
            echo "npm is not installed. Installing npm..."
            sudo apt-get -y install npm
          else
            echo "npm is already installed."
          fi

  - name: temp-build-folder
    description: "Creates a temporary build folder which can be used to store packages created during the workflow"
    actions:
      - description: "Make the build directory at the root level of the repository"
        cmd: |
          mkdir -p build/packages/
          mkdir -p build/bundles/
          mkdir -p build/packages/rook-ceph/
          mkdir -p build/packages/longhorn/
          mkdir -p build/packages/local-path/

  - name: uds-rke2
    description: "Build the UDS RKE2 Zarf package"
    actions:
      - description: "Build UDS RKE2 Package"
        cmd: |
          sudo ZARF_CONFIG="packages/uds-rke2/zarf-config.yaml" uds zarf package create packages/uds-rke2/ \
           -o build/packages/ \
           --no-progress \
           --set VERSION=${VERSION} \
           --confirm

  - name: local-path-init
    description: "Build the custom Zarf Init package for RKE2 with Rook-Ceph"
    actions:
      - description: "Build the custom Zarf Init package"
        cmd: |
          sudo ZARF_CONFIG="packages/init/zarf-config.yaml" uds zarf package create packages/init/ \
            -o build/packages/local-path/ \
            --set AGENT_IMAGE_TAG=$(uds zarf version) \
            --flavor local-path \
            --no-progress \
            --set VERSION=${VERSION} \
            --confirm

  - name: longhorn-init-single-node
    description: "Build the custom Zarf Init package for RKE2 with longhorn"
    actions:
      - description: "Build the custom Zarf Init package"
        cmd: |
          sudo ZARF_CONFIG="packages/init/zarf-config.yaml" uds zarf package create packages/init/ \
            -o build/packages/longhorn/ \
            --set AGENT_IMAGE_TAG=$(uds zarf version) \
            --flavor longhorn \
            --no-progress \
            --set VERSION=${VERSION} \
            --confirm

  - name: rook-ceph-init
    description: "Build the custom Zarf Init package for RKE2 with Rook-Ceph"
    actions:
      - description: "Build the custom Zarf Init package"
        cmd: |
          sudo ZARF_CONFIG="packages/init/zarf-config.yaml" uds zarf package create packages/init/ \
            -o build/packages/rook-ceph/ \
            --set AGENT_IMAGE_TAG=$(uds zarf version) \
            --flavor rook-ceph \
            --no-progress \
            --set VERSION=${VERSION} \
            --confirm

  - name: uds-rke2-exemptions
    description: "Build the UDS RKE2 service Pepr policy exemptions package"
    actions:
      - description: "Build the Pepr policy exemptions package"
        cmd: |
          sudo ZARF_CONFIG="packages/exemptions/zarf-config.yaml" uds zarf package create packages/exemptions/ \
            -o build/packages/ \
            --no-progress \
            --set VERSION=${VERSION} \
            --confirm

  - name: minio
    description: "Build the MinIO package"
    actions:
      - description: "Build the MinIO package"
        cmd: |
          sudo ZARF_CONFIG="packages/minio/zarf-config.yaml" uds zarf package create packages/minio/ \
            -o build/packages/ \
            --no-progress \
            --set VERSION=${VERSION} \
            --confirm
