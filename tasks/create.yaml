# TODO: renovate setup
# yaml-language-server: $schema=https://raw.githubusercontent.com/defenseunicorns/uds-cli/v0.10.4/tasks.schema.json

variables:
  - name: VERSION
    description: "Explicitly set the version, overriding the official release tag"
    # x-release-please-start-version
    default: "0.1.0"
    # x-release-please-end

tasks:
  - name: install-deps
    description: "Installs dependencies used in the creation of various packages if not already installed"
    actions:
      - description: "Install required dependencies for package creation if not present on machine"
        cmd: |
          if ! command -v npm &>/dev/null; then
            echo "npm is not installed. Installing npm..."
            sudo apt-get -y install npm
          else
            echo "npm is already installed."
          fi

  - name: temp-build-folder
    description: "Creates a temporary build folder which can be used to store packages created during the workflow"
    actions:
      - description: "Make the build directory at the root level of the repository"
        cmd: |
          sudo mkdir -p build/packages/
          sudo mkdir -p build/bundles/
          sudo mkdir -p build/packages/rook-ceph/
          sudo mkdir -p build/packages/longhorn/
          sudo mkdir -p build/packages/local-path/

  - name: all
    description: "Builds all Zarf packages in the repository"
    actions:
      - task: temp-build-folder
      - task: uds-rke2
      # TODO: add these back in when actually built
      # - task: local-path-init
      # - task: longhorn-init
      - task: rook-ceph-init
      - task: uds-rke2-exemptions
      - task: minio

  - name: create
    description: "Create a Zarf package for the amd64 architectures"
    inputs:
      path:
        description: "Path to the Zarf package being created"
        required: true
      outputPath:
        description: "Output path to the Zarf package being created"
        required: true
      zarfConfig:
        description: "Zarf Config of the Zarf package being created"
        required: true
    actions:
      - description: "Create the Zarf package for the amd64 architectures"
        cmd: |
          sudo ZARF_CONFIG="${{ .inputs.zarfConfig }}" uds zarf package create "${{ .inputs.path }}" \
            -o "${{ .inputs.outputPath }}" \
            --no-progress \
            --no-log-file \
            --log-level warn \
            -a amd64 \
            --set VERSION=${VERSION} \
            --confirm

  - name: uds-rke2
    description: "Build the UDS RKE2 Zarf package"
    actions:
      - task: create
        with:
          path: packages/uds-rke2/
          outputPath: build/packages/
          zarfConfig: packages/uds-rke2/zarf-config.yaml

  - name: local-path-init
    description: "Build the custom Zarf Init package for RKE2 with Rook-Ceph"
    actions:
      - task: create
        with:
          path: packages/local-path/
          outputPath: build/packages/local-path/
          zarfConfig: packages/local-path/zarf-config.yaml

  - name: longhorn-init
    description: "Build the custom Zarf Init package for RKE2 with longhorn"
    actions:
      - task: create
        with:
          path: packages/longhorn/
          outputPath: build/packages/longhorn/
          zarfConfig: packages/longhorn/zarf-config.yaml

  - name: rook-ceph-init
    description: "Build the custom Zarf Init package for RKE2 with Rook-Ceph"
    actions:
      - task: create
        with:
          path: packages/rook-ceph/
          outputPath: build/packages/rook-ceph
          zarfConfig: packages/rook-ceph/zarf-config.yaml

  - name: uds-rke2-exemptions
    description: "Build the UDS RKE2 service Pepr policy exemptions package"
    actions:
      - task: create
        with:
          path: packages/exemptions/
          outputPath: build/packages/
          zarfConfig: packages/exemptions/zarf-config.yaml

  - name: minio
    description: "Build the MinIO package"
    actions:
      - task: create
        with:
          path: packages/minio/
          outputPath: build/packages/
          zarfConfig: packages/minio/zarf-config.yaml
