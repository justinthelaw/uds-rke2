# TODO: renovate setup
# yaml-language-server: $schema=https://raw.githubusercontent.com/defenseunicorns/uds-cli/v0.10.4/tasks.schema.json

variables:
  - name: VERSION
    description: "Explicitly set the version, overriding the official release tag"
    # x-release-please-start-version
    default: "0.3.0"
    # x-release-please-end

  - name: DEPLOY_OPTIONS
    description: "Extra Zarf package deployment options"
    default: "--no-progress --no-log-file --log-level warn --confirm"
  - name: DEPLOY_BUNDLE_OPTIONS
    description: "Extra UDS bundle deployment options"
    default: "--no-progress --no-tea --no-log-file --log-level warn -a amd64 --confirm"

tasks:
  ###########
  # REUSEABLE
  ###########

  - name: deploy
    description: "Deploy the Zarf package for amd64 architectures"
    inputs:
      path:
        description: "Path to the Zarf package being deployed"
        required: true
      name:
        description: "Name of the Zarf package being deployed"
        required: true
    actions:
      - description: "Deploy the Zarf package for amd64 architectures"
        cmd: |
          sudo uds zarf package deploy "${{ .inputs.path }}/zarf-package-${{ .inputs.name }}-amd64-${VERSION}.tar.zst" \
          ${REGISTRY_OPTIONS} \
          ${DEPLOY_OPTIONS}

  - name: init
    description: "Deploy the Zarf Init package for amd64 architectures"
    inputs:
      path:
        description: "Path to the Zarf Init package being deployed"
        required: true
      extraOptions:
        description: "Extra deployment options specific to the Zarf Init package's configuration"
        required: false
    actions:
      - description: "Deploy the Zarf Init package for amd64 architectures"
        cmd: |
          sudo uds zarf package deploy "${{ .inputs.path }}/zarf-init-amd64-${VERSION}.tar.zst" \
            ${{ .inputs.extraOptions }} \
            ${REGISTRY_OPTIONS} \
            ${DEPLOY_OPTIONS}

  - name: bundle
    description: "Deploy the UDS bundle for the amd64 architectures"
    inputs:
      path:
        description: "Path to the UDS bundle being deployed"
        required: true
      name:
        description: "Name of the UDS bundle being deployed"
        required: true
      extraOptions:
        description: "Extra deployment options specific to the UDS bundle's configuration"
        required: false
    actions:
      - description: "Deploy the UDS bundle for the amd64 architectures"
        cmd: |
          sudo uds deploy "${{ .inputs.path }}/uds-bundle-${{ .inputs.name }}-amd64-${VERSION}.tar.zst" \
            ${{ .inputs.extraOptions }} \
            ${REGISTRY_OPTIONS} \
            ${DEPLOY_BUNDLE_OPTIONS}

  #########
  # BUNDLES
  #########

  - name: uds-rke2-local-path-bundle
    description: "Deploy the Local Path Provisioner UDS RKE2 bootstrapping bundle"
    actions:
      - task: bundle
        with:
          name: uds-rke2-bootstrap
          path: build/bundles/local-path
          extraOptions: "--set JOIN_TOKEN=my-test-token"

  ###################
  # STANDARD PACKAGES
  ###################

  - name: uds-rke2-bootstrap
    description: "Deploy the UDS RKE2 Zarf package, as a new cluster bootstrapping node"
    inputs:
      joinToken:
        description: "Cluster joining token"
        required: true
      optionalComponents:
        description: "Optional components to deploy"
        required: false
        default: "--components destroy-cluster"
    actions:
      - description: "Deploy RKE2 node, with optional components enabled"
        cmd: |
          sudo uds zarf package deploy build/packages/zarf-package-uds-rke2-amd64-${VERSION}.tar.zst \
            --set JOIN_TOKEN=${{ .inputs.joinToken }} \
            ${{ .inputs.optionalComponents }} \
            ${DEPLOY_OPTIONS}

  - name: uds-rke2-join-node
    description: "Deploy the UDS RKE2 Zarf package, as a cluster joining node"
    inputs:
      joinToken:
        description: "Cluster joining token"
        required: true
      joinAddress:
        description: "IP address at which to join the node when an existing cluster exists at a different IP address"
        default: ""
        required: false
      dnsAddress:
        description: "DNS address at which to join the node when accessing via a public IP or a hostname"
        default: ""
        required: false
      agentFlag:
        description: "Join the cluster as an agent-only node with `-a` flag "
        default: ""
        required: false
    actions:
      - description: "Deploy RKE2 node"
        cmd: |
          sudo uds zarf package deploy build/packages/zarf-package-uds-rke2-amd64-${VERSION}.tar.zst \
            --set JOIN_ADDRESS=${{ .inputs.joinAddress }} \
            --set JOIN_TOKEN=${{ .inputs.joinToken }} \
            --set DNS_ADDRESS=${{ .inputs.dnsAddress }} \
            --set AGENT_FLAG=${{ .inputs.agentFlag }} \
            ${DEPLOY_OPTIONS}

  - name: uds-rke2-infrastructure
    description: "Deploy the UDS RKE2 Infrastructure package"
    actions:
      - task: deploy
        with:
          path: build/packages
          name: infrastructure

  - name: uds-rke2-exemptions-local-path
    description: "Deploy the UDS RKE2 service Pepr policy exemptions package"
    actions:
      - task: deploy
        with:
          path: build/packages/local-path
          name: exemptions

  - name: uds-rke2-exemptions-longhorn
    description: "Deploy the UDS RKE2 service Pepr policy exemptions package"
    actions:
      - task: deploy
        with:
          path: build/packages/longhorn
          name: exemptions

  - name: uds-rke2-exemptions-rook-ceph
    description: "Deploy the UDS RKE2 service Pepr policy exemptions package"
    actions:
      - task: deploy
        with:
          path: build/packages/rook-ceph
          name: exemptions

  - name: minio
    description: "Deploy the MinIO package"
    actions:
      - task: deploy
        with:
          path: build/packages
          name: minio

  - name: uds-core
    description: "Deploy a pulled UDS Core package"
    actions:
      - task: deploy
        with:
          path: build/packages
          name: core

  ###############
  # INIT PACKAGES
  ###############

  - name: local-path-init
    description: "Deploy the custom Zarf Init Package for RKE2 with Longhorn"
    actions:
      - task: init
        with:
          path: build/packages/local-path

  - name: longhorn-init
    description: "Deploy the custom Zarf Init Package for RKE2 with Longhorn"
    actions:
      - task: init
        with:
          path: build/packages/longhorn

  - name: rook-ceph-init
    description: "Deploy the custom Zarf Init Package for RKE2 with Rook-Ceph"
    actions:
      - task: init
        with:
          path: build/packages/longhorn
          # File storage is disabled by default, but can be enabled as necessary via UDS overrides or manual Zarf deployment
          extraOptions: $"--set ENABLE_CEPH_BLOCK_STORE=true \
            --set ENABLE_CEPH_OBJECT_STORE=true \
            --set ENABLE_CEPH_FILE_STORE=false \
            --set CEPH_BLOCK_STORE_AS_DEFAULT=true \
            --set CEPH_OBJECT_STORE_AS_DEFAULT=false \
            --set CEPH_FILE_STORE_AS_DEFAULT=false"

  ########################
  # APP-SPECIFIC PACKAGES
  ########################

  - name: leapfrogai-workarounds
    description: "Deploy the LeapfrogAI-specific workarounds package"
    actions:
      - task: deploy
        with:
          path: build/packages
          name: leapfrogai-workarounds
